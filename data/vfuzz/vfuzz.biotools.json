{
    "additionDate": "2021-01-18T10:56:20Z",
    "biotoolsCURIE": "biotools:vfuzz",
    "biotoolsID": "vfuzz",
    "confidence_flag": "tool",
    "description": "Vulnerability Prediction-Assisted Evolutionary Fuzzing for Binary Programs.\n\nFuzzing is a technique of finding bugs by executing a target program recurrently with a large number of abnormal inputs. Most of the coverage-based fuzzers consider all parts of a program equally and pay too much attention to how to improve the code coverage. It is inefficient as the vulnerable code only takes a tiny fraction of the entire code. In this article, we design and implement an evolutionary fuzzing framework called V-Fuzz, which aims to find bugs efficiently and quickly in limited time for binary programs. V-Fuzz consists of two main components: 1) a vulnerability prediction model and 2) a vulnerability-oriented evolutionary fuzzer. Given a binary program to V-Fuzz, the vulnerability prediction model will give a prior estimation on which parts of a program are more likely to be vulnerable",
    "editPermission": {
        "type": "private"
    },
    "homepage": "https://github.com/guidovranken/vfuzz",
    "lastUpdate": "2021-03-20T12:30:28.832396Z",
    "name": "VFuzz",
    "owner": "zsmag19",
    "publication": [
        {
            "doi": "10.1109/TCYB.2020.3013675",
            "pmid": "32946405"
        }
    ]
}