{
    "additionDate": "2018-07-25T08:58:57Z",
    "biotoolsCURIE": "biotools:pgca",
    "biotoolsID": "pgca",
    "collectionID": [
        "Proteomics",
        "BioConductor"
    ],
    "cost": "Free of charge",
    "credit": [
        {
            "email": "gcohen@stat.ubc.ca",
            "name": "Gabriela Cohen-Freue",
            "typeEntity": "Person",
            "typeRole": [
                "Primary contact"
            ]
        }
    ],
    "description": "Protein Group Code Algorithm is a computationally inexpensive algorithm to merge protein summaries from multiple experimental quantitative proteomics data. The algorithm connects two or more groups with overlapping accession numbers. In some cases, pairwise groups are mutually exclusive but they may still be connected by another group with overlapping accession numbers. Thus, groups created by PGCA from multiple experimental runs are called \"connected\" groups.",
    "documentation": [
        {
            "type": [
                "User manual"
            ],
            "url": "http://bioconductor.org/packages/release/bioc/manuals/pgca/man/pgca.pdf"
        }
    ],
    "download": [
        {
            "type": "Software package",
            "url": "http://bioconductor.org/packages/release/bioc/src/contrib/pgca_1.4.0.tar.gz"
        }
    ],
    "editPermission": {
        "authors": [
            "proteomics.bio.tools"
        ],
        "type": "group"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Data handling",
                    "uri": "http://edamontology.org/operation_2409"
                }
            ]
        }
    ],
    "homepage": "http://bioconductor.org/packages/release/bioc/html/pgca.html",
    "language": [
        "R"
    ],
    "lastUpdate": "2019-03-26T08:31:47Z",
    "license": "GPL-2.0",
    "link": [
        {
            "type": [
                "Mirror"
            ],
            "url": "http://bioconductor.org/packages/pgca/"
        }
    ],
    "name": "pgca",
    "operatingSystem": [
        "Linux",
        "Windows",
        "Mac"
    ],
    "owner": "shadi.m",
    "publication": [
        {
            "doi": "10.1371/journal.pone.0177569",
            "metadata": {
                "abstract": "\u00a9 2017 Kepplinger et al.This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.The quantitation of proteins using shotgun proteomics has gained popularity in the last decades, simplifying sample handling procedures, removing extensive protein separation steps and achieving a relatively high throughput readout. The process starts with the digestion of the protein mixture into peptides, which are then separated by liquid chromatography and sequenced by tandem mass spectrometry (MS/MS). At the end of the workflow, recovering the identity of the proteins originally present in the sample is often a difficult and ambiguous process, because more than one protein identifier may match a set of peptides identified from the MS/MS spectra. To address this identification problem, many MS/MS data processing software tools combine all plausible protein identifiers matching a common set of peptides into a protein group. However, this solution introduces new challenges in studies with multiple experimental runs, which can be characterized by three main factors: i) protein groups' identifiers are local, i.e., they vary run to run, ii) the composition of each group may change across runs, and iii) the supporting evidence of proteins within each group may also change across runs. Since in general there is no conclusive evidence about the absence of proteins in the groups, protein groups need to be linked across different runs in subsequent statistical analyses. We propose an algorithm, called Protein Group Code Algorithm (PGCA), to link groups from multiple experimental runs by forming global protein groups from connected local groups. The algorithm is computationally inexpensive and enables the connection and analysis of lists of protein groups across runs needed in biomarkers studies. We illustrate the identification problem and the stability of the PGCA mapping using 65 iTRAQ experimental runs. Further, we use two biomarker studies to show how PGCA enables the discovery of relevant candidate protein group markers with similar but non-identical compositions in different runs.",
                "authors": [
                    {
                        "name": "Kepplinger D."
                    },
                    {
                        "name": "Takhar M."
                    },
                    {
                        "name": "Sasaki M."
                    },
                    {
                        "name": "Hollander Z."
                    },
                    {
                        "name": "Smith D."
                    },
                    {
                        "name": "McManus B."
                    },
                    {
                        "name": "McMaster W.R."
                    },
                    {
                        "name": "Ng R.T."
                    },
                    {
                        "name": "Freue G.V.C."
                    }
                ],
                "citationCount": 1,
                "date": "2017-05-01T00:00:00Z",
                "journal": "PLoS ONE",
                "title": "PGCA: An algorithm to link protein groups created from MS/MS data"
            },
            "pmcid": "PMC5451011",
            "pmid": "28562641",
            "type": [
                "Primary"
            ]
        }
    ],
    "toolType": [
        "Library"
    ],
    "topic": [
        {
            "term": "Proteomics experiment",
            "uri": "http://edamontology.org/topic_3520"
        },
        {
            "term": "Proteomics",
            "uri": "http://edamontology.org/topic_0121"
        }
    ],
    "version": [
        "1.4.0"
    ]
}